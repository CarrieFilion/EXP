This version uses CMake to configure.  The basis steps are as follows:

# We are now using git submodules to install png++ and yaml-cpp, which
# are not common in the HPC environments.  So, from the top-level directory,
# do the following:

git submodule update --init --recursive 

# Make a build directory and change to that
mkdir -p build
cd build

# You may need to adjust the cmake call below.  Besides Cuda, make sure that
# the Eigen3_DIR is set to the install location so CMake can find the Eigen3
# rules.

# The install location will need to be changed in the example below.  E.g. I
# would use -DCMAKE_INSTALL_PREFIX=/home/mdw_umass_edu on the UMass Unity
# cluster.

# There are various options.  A subset of user modules are ON by
# default.  These can be disabled by -DENABLE_USER=NO.  This compiles
# a subset of user modules.  The full set can be compiled using
# -DENABLE_USER_ALL=YES.

# ENABLE_DSMC compiles the dsmc module and off by default.

# With cuda.  NB: different version of CMake seem to treat Cuda
# architecture specification differently.  The current implementation
# uses an archetecture list set within the top-level
# CMakeLists. Version >= 3.18 uses a command-line settable variable.
# This should switched over once we are using versions >= 3.18
# everywhere.
#
cmake -DCUDA_USE_STATIC_CUDA_RUNTIME=off -DENABLE_CUDA=YES -DENABLE_USER=YES -DEigen3_DIR=$EIGEN_BASE/share/eigen3/cmake -DCMAKE_INSTALL_PREFIX=/home/user -Wno-dev ..

# Without cuda
#
cmake -DENABLE_USER=YES -DEigen3_DIR=$EIGEN_BASE/share/eigen3/cmake -DCMAKE_INSTALL_PREFIX=/home/user -Wno-dev ..

# Make the package
make -j N

# Make the documentation (optional).  The doc will be installed in
# share/EXP/html under the install path.  The documentation is not
# made by default, and you can skip this.

make doc

# Install to the target location
make install

