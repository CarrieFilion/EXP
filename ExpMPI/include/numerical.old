float Single();

#define float double


/* 
	some simple macros
*/

#define MAX(bob, joe) (((bob) > (joe)) ? (bob) : (joe))
#define MIN(bob, joe) (((bob) < (joe)) ? (bob) : (joe))
#define FLOAT(bob)  ((float) (bob))
#define SQR(bob) ((bob)*(bob))
#define Pi 3.141592653589793
#define TINY 1.e-10

/*
	other names for common functions, compatible with Mathematica
*/

#define Sin sin
#define Cos cos
#define Tan tan
#define ArcTan atan
#define ArcSin asin
#define ArcCos acos
#define Exp exp
#define Power pow
#define Sqrt sqrt
#define Log log
#define Log10 log10
#define Pow10 pow10
#define Sinh sinh
#define Cosh cosh
#define Tanh tanh
#define ArcSinh asinh
#define ArcCosh acosh
#define ArcTanh atanh
#define ArcTanXY arctanxy


/* 
	declarations of non-standard functions
*/

/* rounding functions */

int nint();
float round();




/* Borland extensions, not defined in UNIX C */

#ifndef __TURBOC__
float poly();
float pow10();
#endif





/* inverse hyperbolic functions (not defined in Borland C) */

#ifdef __TURBOC__
float asinh();
float acosh();
float atanh();
#endif




/* multiple angle trig functions */

void trigs();





/* some numerical recipes utility functions */

double *dvector();
double **dmatrix();
void free_dvector();
void free_dmatrix();
float *vector();
float **matrix();
void free_vector();
void free_matrix();
void nrerror();



/* numerical quadrature */

void gauleg();
float qadapt();



/* root finding */

float zbrent();
float rtbis();
float rtsafe();
void zbrac();




/* 1D minimization */

float brent();
void mnbrak();



/* random numbers */

void Init_Random();
float Random();
float GaussianVariable();
void Random_Vector();
void Random_Polar_Angle();




/* ODE solvers */

void onestep();
void rkqc();
void rk2qc();
void bsstep();
void constant_step();






/* interpolation stuff */

struct cubic_table
{
	int npts;
	float *xgrid;
	float *dx;
	float *a, *b, *c, *d;
};

void locate();
struct cubic_table build_cubic_table();
float lookup_value();
void destroy_cubic_table();






/* command line parser utilities */

void init_cmdparse();
char *strarg();
int iarg();
int cmdflag_set();
float farg();
















